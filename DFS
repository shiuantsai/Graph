import java.util.*;
public class Graph {
	private int V;
	private LinkedList<Integer> adj[];
	
	//initially
	Graph(int v){
		this.V=v;
		//創造鏈結串列五個node
		adj = new LinkedList[5];
		for(int i=0;i<v;i++) {
			adj[i] = new LinkedList();
		}		
	}
	
	//將b加到a的佇列
	void addEdge(int a,int b){
		adj[a].add(b);
	}
	
	void DFSUtil(int v,boolean visited[]) {
		visited[v] = true;
		System.out.print(v+" ");
		
		//遍歷所有此點的鄰邊
		Iterator<Integer> i = adj[v].listIterator();
		
		 while (i.hasNext())
	      {
	            int n = i.next();
	            if (!visited[n])
	                DFSUtil(n, visited);
	      }
	}
	
	
	
	void DFS(int v) {
		boolean visited[] = new boolean[V];
		
		DFSUtil(v, visited);
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Graph g = new Graph(4);
		   g.addEdge(0, 1);
	       g.addEdge(0, 2);
	       g.addEdge(1, 2);
	       g.addEdge(2, 0);
	       g.addEdge(2, 3);
	       g.addEdge(3, 3);

	        System.out.println("Following is Depth First Traversal "+
	                           "(starting from vertex 2)");
	       g.DFS(2); //從2開始跑
	}

}
